# Generated by Django 3.0.3 on 2020-03-09 12:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_one', models.CharField(max_length=64)),
                ('line_two', models.CharField(max_length=64)),
                ('city', models.CharField(max_length=64)),
                ('county', models.CharField(max_length=64)),
                ('postcode', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first', models.CharField(max_length=64)),
                ('last', models.CharField(max_length=64)),
                ('email', models.CharField(max_length=64)),
                ('number', models.CharField(max_length=64)),
                ('address', models.ManyToManyField(related_name='address', to='html_form.Address')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('IN', 'Inbox'), ('CU', 'Current'), ('AR', 'Archive')], default='IN', max_length=2)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='html_form.Address')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='html_form.Client')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='client',
            field=models.ManyToManyField(related_name='client', to='html_form.Client'),
        ),
    ]
